name: Deploy to Google Play Internal

on:
  push:
    branches:
      - 'release'
  workflow_dispatch:

env:
  INITIAL_VERSION_CODE: ${{ 1500 }}

jobs:
  build_and_upload:
    name: Upload apk to Google Play Internal
    runs-on: [ self-hosted, ARM64, active-android, Linux ]
    environment: Alpha
    outputs:
      version_name: ${{ steps.get_version_name.outputs.versionName }}
      version_code: ${{ steps.get_version_code.outputs.versionCode }}
      jira_summary: ${{ steps.jira.outputs.summary }}
    steps:
      - name: Jira Login
        uses: atlassian/gajira-login@master
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_TOKEN }}

      - name: Get Jira Issue Number from Branch Name
        id: jira
        uses: tangem/jira-action@master
        with:
          action: getBranchSummary
          branch-name: ${{ github.ref_name }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GH_MOBILE_PAT }}

      - name: Build Docker image
        run: |
          docker build --platform linux/arm64 -t tangem_ci_android_environment .

      - name: Increment version code
        id: get_version_code
        env:
          RUN_NUMBER: ${{ github.run_number }}
        run: |
          VERSION_CODE=$((RUN_NUMBER + $INITIAL_VERSION_CODE))
          echo "versionCode=$VERSION_CODE" >> $GITHUB_OUTPUT

      - name: Read version.properties file
        id: get_version_name
        uses: BrycensRanch/read-properties-action@v1
        with:
          file: version.properties
          property: versionName
          default: 0.0.1

      - name: Run uploading
        id: uploading
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          DEX_PROTECTOR_HOME: /home/ubuntu/CI/dexprotector
          SHA_256_CERTIFICATE_FINGERPRINT: ${{ secrets.SHA_256_CERTIFICATE_FINGERPRINT }}
          keystore_encoded_base64: ${{ secrets.TEST_KEYSTORE }}
          store_password: ${{ secrets.TEST_STORE_PASSWORD }}
          key_alias: ${{ secrets.TEST_KEY_ALIAS }}
          key_password: ${{ secrets.TEST_KEY_PASSWORD }}
          version_code: ${{ steps.get_version_code.outputs.versionCode }}
          version_name:  ${{ steps.get_version_name.outputs.versionName }}
          release_notes: ${{ github.ref_name }} - ${{ github.sha }}
        run: |
          env > .env
          
          docker run --rm \
            --user ubuntu \
            --env-file .env \
            --volume ~/.gradle:/home/ubuntu/.gradle \
            --volume ~/apks:/home/ubuntu/apks \
            --volume ${{ github.workspace }}:/workspace \
            --volume $GITHUB_OUTPUT:/workspace/github_output.txt \
            --volume $DEX_PROTECTOR_HOME:$DEX_PROTECTOR_HOME \
            tangem_ci_android_environment \
            sh -c "
              cd /workspace;
  
              # decoding keystore
              echo \"\$keystore_encoded_base64\" | base64 --decode > keystore
              export keystore=\$(pwd)/keystore
              
              if [ ! -f \"\$keystore\" ]; then
                echo 'Keystore file was not created.'
                exit 1
              fi
              
              # building release
              fastlane build \
                versionCode:\"\$version_code\" \
                versionName:\"\$version_name\" \
                keystore:\"\$keystore\" \
                store_password:\"\$store_password\" \
                key_alias:\"\$key_alias\" \
                key_password:\"\$key_password\" \
                launched_from_github_action:true
          
              # protecting apk
              java -jar $DEX_PROTECTOR_HOME/dexprotector.jar \
                -licenseFile $DEX_PROTECTOR_HOME/dexprotector.licel \
                -signMode release \
                -sha256CertificateFingerprint $SHA_256_CERTIFICATE_FINGERPRINT \
                -keystore \$keystore \
                -alias $key_alias \
                -storepass $store_password \
                -keypass $key_password \
                app/build/outputs/apk/release/app-release.apk \
                app/build/outputs/apk/release/app-release-protected.apk
          
              # protecting aar
              java -jar $DEX_PROTECTOR_HOME/dexprotector.jar \
                -licenseFile $DEX_PROTECTOR_HOME/dexprotector.licel \
                -signMode release \
                -sha256CertificateFingerprint $SHA_256_CERTIFICATE_FINGERPRINT \
                -keystore \$keystore \
                -alias $key_alias \
                -storepass $store_password \
                -keypass $key_password \
                app/build/outputs/bundle/release/app-release.aab \
                app/build/outputs/bundle/release/app-release-protected.aab
              
              # copy apk and aab to host
              cp app/build/outputs/apk/release/app-release.apk /home/ubuntu/apks/app-release-$version_code-$version_name.apk     
              cp app/build/outputs/apk/release/app-release-protected.apk /home/ubuntu/apks/app-release-protected-$version_code-$version_name.apk
              
              # upload to Google Play
              fastlane supply \
                package_name:com.tangem.wallet \
                track:internal \
                aab:app/build/outputs/bundle/release/app-release-protected.aab \
                json_key_data:{TODO_AND-9952} \
                release_status:completed \
                skip_upload_apk:false \
                skip_upload_aab:false \
                skip_upload_metadata:false \
                skip_upload_changelogs:false \
                skip_upload_images:false \
                skip_upload_screenshots:false \
                sync_image_upload:false \
                track_promote_release_status:completed \
                validate_only:false \
                check_superseded_tracks:false \
                timeout:300 \
                deactivate_on_promote:true \
                changes_not_sent_for_review:false \
                rescue_changes_not_sent_for_review:true \
                ack_bundle_installation_warning:false
                "

# TODO: uncomment when AND-9552 is ready
#  notification:
#    name: Send Notification
#    needs: build_and_upload
#    uses: tangem/actions/.github/workflows/notification.yml@main
#    with:
#      channel: 'deployments-android'
#      status: 'success'
#      app_name: 'Tangem Release'
#      deploy_to: 'Google Play Internal'
#      version: ${{ needs.build_and_upload.outputs.version_name }}
#      build_number: ${{ needs.build_and_upload.outputs.version_code }}
#      changelog: ${{ needs.build_and_upload.outputs.jira_summary }}
#      build_description: ${{ inputs.build_description }}
#      encoded_release_url: ${{ needs.build_and_upload.outputs.encoded_release_url }}
#    secrets:
#      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#
#  error_notification:
#    name: Error Notification
#    needs: build_and_upload
#    if: failure()
#    uses: tangem/actions/.github/workflows/notification.yml@main
#    with:
#      channel: 'deployments-android'
#      status: 'error'
#      app_name: 'Tangem Release'
#      deploy_to: 'Google Play Internal'
#      version: ${{ needs.build_and_upload.outputs.version_name }}
#      build_number: ${{ needs.build_and_upload.outputs.version_code }}
#      changelog: ${{ needs.build_and_upload.outputs.jira_summary }}
#      build_description: ${{ inputs.build_description }}
#      encoded_release_url: ${{ needs.build_and_upload.outputs.encoded_release_url }}
#    secrets:
#      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
