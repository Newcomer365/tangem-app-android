name: Deploy to Google Play Internal

on:
  push:
    branches:
      - 'release'
  workflow_dispatch:

jobs:
  prepare:
    uses: ./.github/workflows/prepare.yml
    name: Prepare
    with:
      initial_version_code: 1500
      use_dexprotector: true
    secrets: inherit

  deploy:
    name: Build and deploy
    runs-on: [ self-hosted, ARM64, active-android, Linux ]
    needs: prepare
    steps:
      - name: Build APK & AAB
        id: build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          keystore_encoded_base64: ${{ secrets.TEST_KEYSTORE }}
          store_password: ${{ secrets.TEST_STORE_PASSWORD }}
          key_alias: ${{ secrets.TEST_KEY_ALIAS }}
          key_password: ${{ secrets.TEST_KEY_PASSWORD }}
          version_code: ${{ needs.prepare.outputs.version_code }}
          version_name: ${{ needs.prepare.outputs.version_name }}
        run: |
          env > .env
          
          docker run --rm \
            --user ubuntu \
            --env-file .env \
            --volume ~/.gradle:/home/ubuntu/.gradle \
            --volume ${{ github.workspace }}:/workspace \
            tangem_ci_android_environment \
            sh -c "
              cd /workspace;
          
              # decoding keystore
              echo \"\$keystore_encoded_base64\" | base64 --decode > keystore
              export keystore=\$(pwd)/keystore
          
              # build release
              fastlane buildRelease \
                versionCode:\"\$version_code\" \
                versionName:\"\$version_name\" \
                keystore:\"\$keystore\" \
                store_password:\"\$store_password\" \
                key_alias:\"\$key_alias\" \
                key_password:\"\$key_password\"
          
              cp app/build/outputs/apk/release/app-release.apk /workspace/app-release.apk
              cp app/build/outputs/bundle/release/app-release.aab /workspace/app-release.aab
            "

      - name: Protect APK & AAB
        id: dexprotector
        env:
          DEX_PROTECTOR_HOME: /home/ubuntu/CI/dexprotector
          SHA_256_CERTIFICATE_FINGERPRINT: ${{ secrets.SHA_256_CERTIFICATE_FINGERPRINT }}
          keystore_encoded_base64: ${{ secrets.TEST_KEYSTORE }}
          store_password: ${{ secrets.TEST_STORE_PASSWORD }}
          key_alias: ${{ secrets.TEST_KEY_ALIAS }}
          key_password: ${{ secrets.TEST_KEY_PASSWORD }}
          version_code: ${{ needs.prepare.outputs.version_code }}
          version_name: ${{ needs.prepare.outputs.version_name }}
        run: |
          docker run --rm \
            --user ubuntu \
            --env-file .env \
            --volume $DEX_PROTECTOR_HOME:$DEX_PROTECTOR_HOME \
            --volume ${{ github.workspace }}:/workspace \
            tangem_ci_android_environment \
            sh -c "
              cd /workspace;
          
              # decoding keystore
              echo \"\$keystore_encoded_base64\" | base64 --decode > keystore
              export keystore=\$(pwd)/keystore
          
              java -jar $DEX_PROTECTOR_HOME/dexprotector.jar \
                -licenseFile $DEX_PROTECTOR_HOME/dexprotector.licel \
                -configFile /workspace/app-config/dex-android-config.xml \
                -signMode release \
                -sha256CertificateFingerprint $SHA_256_CERTIFICATE_FINGERPRINT \
                -keystore \$keystore \
                -alias $key_alias \
                -storepass $store_password \
                -keypass $key_password \
                app-release.apk app-release-protected.apk > output.log 2>&1
          
              java -jar $DEX_PROTECTOR_HOME/dexprotector.jar \
                -licenseFile $DEX_PROTECTOR_HOME/dexprotector.licel \
                -configFile /workspace/app-config/dex-android-config.xml \
                -signMode release \
                -sha256CertificateFingerprint $SHA_256_CERTIFICATE_FINGERPRINT \
                -keystore \$keystore \
                -alias $key_alias \
                -storepass $store_password \
                -keypass $key_password \
                app-release.aab app-release-protected.aab > output.log 2>&1
            "
          
          # copy two apk to host
          cp app-release.apk /home/ubuntu/apks/app-release-\$version_code-\$version_name.apk
          cp app-release-protected.apk /home/ubuntu/apks/app-release-protected-\$version_code-\$version_name.apk

      - name: Upload to Google Play
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker run --rm \
            --user ubuntu \
            --volume ${{ github.workspace }}:/workspace \
            tangem_ci_android_environment \
            sh -c "
              cd /workspace;
              fastlane supply \
                package_name:com.tangem.wallet \
                track:internal \
                aab:app-release-protected.aab \
                json_key_data:{TODO_AND-9552} \
                release_status:completed \
                skip_upload_apk:false \
                skip_upload_aab:false \
                skip_upload_metadata:false \
                skip_upload_changelogs:false \
                skip_upload_images:false \
                skip_upload_screenshots:false \
                sync_image_upload:false \
                track_promote_release_status:completed \
                validate_only:false \
                check_superseded_tracks:false \
                timeout:300 \
                deactivate_on_promote:true \
                changes_not_sent_for_review:false \
                rescue_changes_not_sent_for_review:true \
                ack_bundle_installation_warning:false
            "



# TODO: uncomment when AND-9552 is ready
#  notification:
#    name: Send Notification
#    needs: build_apk_and_aab
#    uses: tangem/actions/.github/workflows/notification.yml@main
#    with:
#      channel: 'deployments-android'
#      status: 'success'
#      app_name: 'Tangem Release'
#      deploy_to: 'Google Play Internal'
#      version: ${{ needs.build_and_upload.outputs.version_name }}
#      build_number: ${{ needs.build_and_upload.outputs.version_code }}
#      changelog: ${{ needs.build_and_upload.outputs.jira_summary }}
#      build_description: ${{ inputs.build_description }}
#      encoded_release_url: ${{ needs.build_and_upload.outputs.encoded_release_url }}
#    secrets:
#      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
#
#  error_notification:
#    name: Error Notification
#    needs: build_apk_and_aab
#    if: failure()
#    uses: tangem/actions/.github/workflows/notification.yml@main
#    with:
#      channel: 'deployments-android'
#      status: 'error'
#      app_name: 'Tangem Release'
#      deploy_to: 'Google Play Internal'
#      version: ${{ needs.build_and_upload.outputs.version_name }}
#      build_number: ${{ needs.build_and_upload.outputs.version_code }}
#      changelog: ${{ needs.build_and_upload.outputs.jira_summary }}
#      build_description: ${{ inputs.build_description }}
#      encoded_release_url: ${{ needs.build_and_upload.outputs.encoded_release_url }}
#    secrets:
#      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
