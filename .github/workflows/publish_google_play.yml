name: Publish release build to GP Beta

on:
  push:
    branches:
      - 'release'
  workflow_dispatch:

env:
  ENABLE_DEX_PROTECTOR: "false"

jobs:
  set_dex_protector_flag:
    name: Set dex protector flag
    runs-on: ubuntu-latest
    outputs:
      use_dexprotector: ${{ steps.set-output.outputs.value }}
    steps:
      - name: Set output
        id: set-output
        run: echo "value=${{ env.ENABLE_DEX_PROTECTOR == 'true' }}" >> "$GITHUB_OUTPUT"

  build_and_publish:
    name: Build, protect and publish
    runs-on: [ self-hosted, active-android, build ]
    environment: Production
    needs:
      - set_dex_protector_flag
    steps:
      - name: Clean
        run: rm -rf *

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GH_MOBILE_PAT }}

      - name: Checkout dexprotector config
        if: ${{ needs.set_dex_protector_flag.outputs.use_dexprotector == 'true' }}
        uses: actions/checkout@v3
        with:
          repository: 'tangem-developments/private-app-config'
          ref: 'main'
          token: ${{ secrets.GH_MOBILE_PAT }}
          path: 'app-config'

      - name: Increment version code
        id: get_version_code
        env:
          RUN_NUMBER: ${{ github.run_number }}
          INITIAL_VERSION_CODE: 1200
        run: |
          VERSION_CODE=$((RUN_NUMBER + INITIAL_VERSION_CODE))
          echo "versionCode=$VERSION_CODE" >> $GITHUB_OUTPUT

      - name: Read version.properties file
        id: get_version_name
        uses: BrycensRanch/read-properties-action@v1
        with:
          file: version.properties
          property: versionName
          default: 0.0.1

      - name: Build Docker image
        run: |
          docker build --platform linux/arm64 -t tangem_ci_android_environment -f ci_resources/Dockerfile.android .      

      - name: Build APK & AAB
        id: build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          keystore_encoded_base64: ${{ secrets.UPLOAD_KEYSTORE }}
          store_password: ${{ secrets.UPLOAD_STORE_PASSWORD }}
          key_alias: ${{ vars.UPLOAD_KEY_ALIAS }}
          key_password: ${{ secrets.UPLOAD_KEY_PASSWORD }}
          version_code: ${{ steps.get_version_code.outputs.versionCode }}
          version_name: ${{ steps.get_version_name.outputs.versionName }}
        run: |
          env > .env
          
          docker run --rm \
            --user ubuntu \
            --env-file .env \
            --volume ~/.gradle:/home/ubuntu/.gradle \
            --volume ~/apks:/home/ubuntu/apks \
            --volume ~/bundles:/home/ubuntu/bundles \
            --volume ${{ github.workspace }}:/workspace \
            tangem_ci_android_environment \
            sh -c '
              cd /workspace;
          
              # decoding keystore
              echo $keystore_encoded_base64 | base64 --decode > keystore
              export keystore=$(pwd)/keystore
          
              # build release
              fastlane buildRelease \
                versionCode:$version_code \
                versionName:$version_name \
                keystore:$keystore \
                store_password:$store_password \
                key_alias:$key_alias \
                key_password:$key_password
          
              cp app/build/outputs/apk/release/app-release.apk /workspace/app-release.apk
              cp app/build/outputs/bundle/release/app-release.aab /workspace/app-release.aab
              cp app/build/outputs/bundle/release/app-release.aab /workspace/app-release-$version_code-$version_name.aab
              
              cp app/build/outputs/apk/release/app-release.apk /home/ubuntu/apks/app-release-$version_code-$version_name.apk
            '

      - name: Protect APK & AAB
        id: dexprotector
        if: ${{ env.ENABLE_DEX_PROTECTOR == 'true' }}
        env:
          DEX_PROTECTOR_HOME: /home/ubuntu/CI/dexprotector
          SHA_256_CERTIFICATE_FINGERPRINT: ${{ secrets.UPLOAD_SHA_256_CERTIFICATE_FINGERPRINT }}
          keystore_encoded_base64: ${{ secrets.UPLOAD_KEYSTORE }}
          store_password: ${{ secrets.UPLOAD_STORE_PASSWORD }}
          key_alias: ${{ vars.UPLOAD_KEY_ALIAS }}
          key_password: ${{ secrets.UPLOAD_KEY_PASSWORD }}
          version_code: ${{ steps.get_version_code.outputs.versionCode }}
          version_name: ${{ steps.get_version_name.outputs.versionName }}
        run: |
          env > .env
          
          docker run --rm \
            --user ubuntu \
            --env-file .env \
            --volume $DEX_PROTECTOR_HOME:$DEX_PROTECTOR_HOME \
            --volume ~/apks:/home/ubuntu/apks \
            --volume ${{ github.workspace }}:/workspace \
            tangem_ci_android_environment \
            sh -c '
              cd /workspace;
          
              # decoding keystore
              echo $keystore_encoded_base64 | base64 --decode > keystore
              export keystore=$(pwd)/keystore
          
              java -jar $DEX_PROTECTOR_HOME/dexprotector.jar \
                -licenseFile $DEX_PROTECTOR_HOME/dexprotector.licel \
                -configFile /workspace/app-config/dex-android-config.xml \
                -signMode release \
                -sha256CertificateFingerprint $SHA_256_CERTIFICATE_FINGERPRINT \
                -keystore $keystore \
                -alias $key_alias \
                -storepass $store_password \
                -keypass $key_password \
                app-release.apk app-release-protected.apk > output.log 2>&1
          
              java -jar $DEX_PROTECTOR_HOME/dexprotector.jar \
                -licenseFile $DEX_PROTECTOR_HOME/dexprotector.licel \
                -configFile /workspace/app-config/dex-android-config.xml \
                -signMode release \
                -sha256CertificateFingerprint $SHA_256_CERTIFICATE_FINGERPRINT \
                -keystore $keystore \
                -alias $key_alias \
                -storepass $store_password \
                -keypass $key_password \
                app-release.aab app-release-protected.aab > output.log 2>&1
            '
          
          # copy apk&aab to host
          cp app-release-protected.apk /home/ubuntu/apks/app-release-protected-$version_code-$version_name.apk
          
          cp app-release-protected.aab /workspace/app-release-protected-$version_code-$version_name.aab



      - name: Upload to Google Play
        env:
          UPLOAD_JSON_KEY_DATA: ${{ secrets.UPLOAD_JSON_KEY_DATA }}
          ENABLE_DEX_PROTECTOR: ${{ env.ENABLE_DEX_PROTECTOR }}
          version_code: ${{ steps.get_version_code.outputs.versionCode }}
          version_name: ${{ steps.get_version_name.outputs.versionName }}
        run: |
          if [[ "$ENABLE_DEX_PROTECTOR" == "true" ]]; then
            export AAB_FILE="app-release-protected-$version_code-$version_name.aab"
          else
            export AAB_FILE="app-release-$version_code-$version_name.aab"
          fi

          docker run --rm \
            --user ubuntu \
            --env UPLOAD_JSON_KEY_DATA="${UPLOAD_JSON_KEY_DATA}" \
            --env AAB_FILE \
            --volume ${{ github.workspace }}:/workspace \
            tangem_ci_android_environment \
            sh -c '
              cd /workspace;
              fastlane run supply \
                package_name:"com.tangem.wallet" \
                track:"internal" \
                aab:$AAB_FILE \
                json_key_data:"$UPLOAD_JSON_KEY_DATA" \
                skip_upload_apk:true \
            '


  notification:
    name: Send Notification
    needs:
      - set_dex_protector_flag
      - build_and_publish
    uses: tangem-developments/actions/.github/workflows/notification.yml@main
    with:
      channel: 'deployments-android'
      status: 'success'
      deploy_to: 'Google Play Internal'
      version: ${{ steps.get_version_name.outputs.versionName }}
      build_number: ${{ steps.get_version_code.outputs.versionCode }}
      is_archive_analyzed: ${{ needs.set_dex_protector_flag.outputs.use_dexprotector == 'true' }}
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  error_notification:
    name: Error Notification
    needs:
      - set_dex_protector_flag
      - build_and_publish
    if: failure()
    uses: tangem-developments/actions/.github/workflows/notification.yml@main
    with:
      channel: 'deployments-android'
      status: 'error'
      deploy_to: 'Google Play Internal'
      version: ${{ steps.get_version_name.outputs.versionNamee }}
      build_number: ${{ steps.get_version_code.outputs.versionCode }}
      is_archive_analyzed: ${{ needs.set_dex_protector_flag.outputs.use_dexprotector == 'true' }}
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
