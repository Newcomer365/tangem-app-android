name: Tangem Application Build

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Install dependencies
        run: sudo apt-get install -y at jq

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Install Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools: 34.0.1
          ndk: '25.2.9519653'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Set gradle.properties
        run: |
          echo "org.gradle.jvmargs=-Xmx6g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8" >> gradle.properties
          echo "android.enableDexingArtifactTransform.desugaring=false" >> gradle.properties

      - name: Set up gradle.properties and Download Keystore
        run: |
          mkdir -p ~/.gradle
          echo "gpr.key=${{ secrets.GITHUB_TOKEN }}" > ~/.gradle/gradle.properties
          echo "gpr.user=${{ github.actor }}" >> ~/.gradle/gradle.properties
          echo "sdk.dir=${ANDROID_HOME}" >> ~/.gradle/gradle.properties
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > ~/keystore.jks

      - name: Build local.properties
        run: |
          echo "gpr.user=${{ github.actor }}" >> local.properties
          echo "gpr.key=${{ secrets.GITHUB_TOKEN }}" >> local.properties
          echo "sdk.dir=${ANDROID_HOME}" >> local.properties

      - name: Read version from version.properties
        run: |
          VERSION_NAME=$(grep 'versionName' version.properties | cut -d '=' -f2)
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV

      - name: Clone external config
        run: |
          git clone https://github.com/Newcomer365/tangem-app-config.git
          mkdir -p app/src/main/assets/tangem-app-config/
          cp -r tangem-app-config/* app/src/main/assets/tangem-app-config/

      - name: Decode and extract package name
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json
          PACKAGE_NAME=$(jq -r '.client[0].client_info.android_client_info.package_name' app/google-services.json)
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV

      - name: Set versionCode using timestamp
        run: |
          VERSION_CODE=$(date +'%Y%m%d%H')
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV

      - name: Update versionCode and packageName
        run: |
          sed -i 's|const val packageName = ".*"|const val packageName = "${{ env.PACKAGE_NAME }}"|' plugins/configuration/src/main/kotlin/com/tangem/plugin/configuration/model/AppConfig.kt

      - name: Generate debug keystore
        run: |
          mkdir -p ~/.android
          keytool -genkeypair -v \
            -keystore ~/.android/debug.keystore \
            -alias androiddebugkey \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -storepass android -keypass android \
            -dname "CN=Android Debug, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=US"
          cp ~/.android/debug.keystore app/src/main/assets/tangem-app-config/android/keystore/
          mkdir -p app/src/main/assets/tangem-app-config/android/keystore/
          echo "store_password=android" > app/src/main/assets/tangem-app-config/android/keystore/debug_keystore.properties
          echo "key_alias=androiddebugkey" >> app/src/main/assets/tangem-app-config/android/keystore/debug_keystore.properties
          echo "key_password=android" >> app/src/main/assets/tangem-app-config/android/keystore/debug_keystore.properties

      - name: Build and Sign APK
        run: |
          ./gradlew assembleRelease \
            --no-daemon \
            --max-workers=2 \
            -Dorg.gradle.jvmargs="-Xmx6g" \
            -Pandroid.injected.signing.store.file=$HOME/keystore.jks \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }} \
            -PversionName=${{ env.VERSION_NAME }} \
            -PversionCode=${{ env.VERSION_CODE }} \
            -PpackageName=${{ env.PACKAGE_NAME }}

      - name: Rename APK
        run: |
          mv app/build/outputs/apk/release/app-release.apk \
             app/build/outputs/apk/release/tangem_${{ env.VERSION_NAME }}.apk

      - name: Generate SHA256 hash
        run: |
          APK=app/build/outputs/apk/release/tangem_${{ env.VERSION_NAME }}.apk
          SHA256_HASH=$(sha256sum $APK | cut -d ' ' -f 1)
          echo "SHA256=$SHA256_HASH" >> $GITHUB_ENV

      - name: Set tag name and release name
        id: set_tag
        run: |
          TIMESTAMP=$(date -u +"%Y-%m-%d_%H-%M-%S")
          TAG_NAME="v${{ env.VERSION_NAME }}_${TIMESTAMP}"
          RELEASE_NAME="Tangem APK v${{ env.VERSION_NAME }} ($TIMESTAMP)"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          body: |
            âœ… Tangem Release v${{ env.VERSION_NAME }}

            SHA256: `${{ env.SHA256 }}`
          draft: false
          prerelease: false
          files: app/build/outputs/apk/release/tangem_${{ env.VERSION_NAME }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Schedule deletion after 30 days
        run: |
          echo "0 0 * * * gh release delete ${{ env.TAG_NAME }} --yes && gh tag delete ${{ env.TAG_NAME }}" | at now + 30 days

      - name: Upload build logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            **/build/reports/
            ~/.gradle/daemon/
          retention-days: 7
