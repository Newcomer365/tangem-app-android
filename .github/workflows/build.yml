name: Tangem Application Build

on:
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Install required tools
      run: sudo apt-get install -y at

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'

    - name: Let Gradle auto-manage Android SDK
      run: echo "Gradle will install required SDK components automatically."

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - name: Set Gradle memory and build options
      run: |
        echo "org.gradle.jvmargs=-Xmx6g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8" >> ./gradle.properties
        
    
    - name: Set up gradle.properties and Download Keystore
      run: |
        mkdir -p ~/.gradle
        echo "gpr.key=${{ secrets.GITHUB_TOKEN }}" > ~/.gradle/gradle.properties
        echo "gpr.user=${{ github.actor }}" >> ~/.gradle/gradle.properties
        echo "sdk.dir=$ANDROID_HOME" >> ~/.gradle/gradle.properties
        echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > ~/keystore.jks

    - name: Build local.properties
      run: |
        echo "gpr.user=${{ github.actor }}" >> local.properties
        echo "gpr.key=${{ secrets.GITHUB_TOKEN }}" >> local.properties
        echo "sdk.dir=$ANDROID_HOME" >> local.properties

    - name: Extract VERSION_NAME from tangem_dependencies.toml
      run: |
        LINE=$(grep 'tangemCardSdk' gradle/tangem_dependencies.toml)
        VERSION_NAME=$(echo "$LINE" | grep -oP 'releases-\K[0-9]+\.[0-9]+\.[0-9]+')
        if [ -z "$VERSION_NAME" ]; then
          echo "VERSION_NAME is empty. Check tangem_dependencies.toml format"
          exit 1
        fi
        echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
        echo "VERSION_NAME=$VERSION_NAME"

    - name: Clone external repository (tangem-app-config)
      run: |
        git clone https://github.com/Newcomer365/tangem-app-config.git
        mkdir -p app/src/main/assets/tangem-app-config/
        rm -rf app/src/main/assets/tangem-app-config/*
        cp -r tangem-app-config/* app/src/main/assets/tangem-app-config/

    - name: Decode and extract package name from google-services.json
      run: |
        echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json
        PACKAGE_NAME=$(jq -r '.client[0].client_info.android_client_info.package_name' app/google-services.json)
        echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV

    - name: Set versionCode as current timestamp
      run: |
        VERSION_CODE=$(date +'%Y%m%d%H')
        echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV

    - name: Update AppConfig.kt (packageName, versionCode, versionName)
      run: |
        sed -i "s|const val packageName = \".*\"|const val packageName = \"${PACKAGE_NAME}\"|" plugins/configuration/src/main/kotlin/com/tangem/plugin/configuration/model/AppConfig.kt
        sed -i "s|const val versionCode = .*|const val versionCode = ${VERSION_CODE}|" plugins/configuration/src/main/kotlin/com/tangem/plugin/configuration/model/AppConfig.kt
        sed -i "s|const val versionName = \".*\"|const val versionName = \"${VERSION_NAME}\"|" plugins/configuration/src/main/kotlin/com/tangem/plugin/configuration/model/AppConfig.kt
    
    - name: Generate Keystore Properties from Secrets
      run: |
        mkdir -p app/src/main/assets/tangem-app-config/android/keystore/
        echo "store_password=${{ secrets.KEYSTORE_PASSWORD }}" > app/src/main/assets/tangem-app-config/android/keystore/debug_keystore.properties
        echo "key_alias=${{ secrets.KEY_ALIAS }}" >> app/src/main/assets/tangem-app-config/android/keystore/debug_keystore.properties
        echo "key_password=${{ secrets.KEY_PASSWORD }}" >> app/src/main/assets/tangem-app-config/android/keystore/debug_keystore.properties

    

    
    - name: Build and Sign APK
      run: |
        ./gradlew assembleRelease \
          --no-daemon \
          --max-workers=2 \
          -Pandroid.injected.signing.store.file=$HOME/keystore.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }} \
          -PversionName=${{ env.VERSION_NAME }} \
          -PversionCode=${{ env.VERSION_CODE }} \
          -PpackageName=${{ env.PACKAGE_NAME }}

    - name: Rename APK to include version name
      run: |
        mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/tangem_${{ env.VERSION_NAME }}.apk

    - name: Generate SHA256 hash
      run: |
        APK_FILE=app/build/outputs/apk/release/tangem_${{ env.VERSION_NAME }}.apk
        SHA256_HASH=$(sha256sum $APK_FILE | cut -d ' ' -f 1)
        echo "SHA256=$SHA256_HASH" >> $GITHUB_ENV

    - name: Set tag and release name
      run: |
        TIMESTAMP=$(date -u +'%Y-%m-%d %H:%M:%S')
        TAG_NAME="v${{ env.VERSION_NAME }}_${TIMESTAMP// /_}"
        TAG_NAME="${TAG_NAME//:/-}"
        RELEASE_NAME="Tangem APK Release v${{ env.VERSION_NAME }} ${TIMESTAMP}"
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
        echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV

    - name: Create GitHub Release and Upload APK
      uses: softprops/action-gh-release@v2
      with:
        name: ${{ env.RELEASE_NAME }}
        tag_name: ${{ env.TAG_NAME }}
        body: |
          Release APK

          Version ${{ env.VERSION_NAME }}
          SHA256: ${{ env.SHA256 }}
        draft: false
        prerelease: false
        files: app/build/outputs/apk/release/tangem_${{ env.VERSION_NAME }}.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}









